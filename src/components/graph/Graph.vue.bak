<!-- src/components/graph/Graph.vue -->
<script setup>
import {onMounted, ref} from 'vue'
import {useGraphStore} from '@/stores/graph'
import cytoscape from 'cytoscape'

const graphStore = useGraphStore()
const graph = ref({})
let cyInstance = null

const initCy = () => {

  cyInstance = cytoscape({
    container: document.getElementById('cy'),
    elements: [], // 初始为空
    style: [
      {
        selector: 'node',
        style: {
          'label': 'data(labels)',
          'background-color': '#999',
        }
      },
      {
        selector: 'edge',
        style: {
          'width': 2,
          'line-color': '#ccc',
          'target-arrow-color': '#ccc',
          'target-arrow-shape': 'triangle',
          'curve-style': 'bezier',
          'label': 'data(label)'
        }
      },
    ],
    layout: {
      name: 'circle',
      animate: true,
      refresh: 10,
      maxSimulationTime: 1500,
      padding: 100
    }
  })
}

const updateGraphData = async () => {2
  await graphStore.loadGraph()
  graph.value = graphStore.graph
}

const updateCy = () => {
  if (!cyInstance) return
  const {nodes, links} = graph.value
  console.log('graph nodes:', nodes, 'links:', links)
  const cyNodes = nodes.map(node => ({
    data: {
      id: node.id.toString(),
      labels: [...node.labels],
      // properties: node.properties
    }
  }))
  const cyEdges = links.map((link) => ({
    data: {
      source: link.from.toString(),
      target: link.to.toString(),
      label: link.type.toString(),
      // properties: link.properties
    }
  }))

  console.log('cy nodes:', cyNodes, 'edges:', cyEdges)
  cyInstance.elements().remove()
  cyInstance.add([...cyNodes])
  cyInstance.add([...cyEdges])
  cyInstance.layout({
    name: 'breadthfirst',
    animate: true,
  }).run()
}

const renderCy = async () => {
  await updateGraphData()
  updateCy()
}

onMounted(() => {
  initCy()
  renderCy()
})
</script>

<template>
  <div id="cy" class="cytoscape"></div>
</template>

<style scoped>
.cytoscape {
  width: 100%;
  height: 100%;
  background-color: #fafafa;
}
</style>